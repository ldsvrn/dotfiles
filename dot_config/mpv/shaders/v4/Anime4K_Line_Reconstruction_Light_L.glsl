//Anime4K v4.0 GLSL

// MIT License

// Copyright (c) 2019-2021 bloc97
// All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-4x3x3x1
//!HOOK NATIVE
//!BIND HOOKED
//!SAVE conv2d_tf
//!WIDTH HOOKED.w
//!HEIGHT HOOKED.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (HOOKED_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.1198509, 0.45914546, -0.6553388, 0.9514586, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1, -1);
    result += mat4(0.24592385, 0.45181704, -0.6311329, -0.11302376, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1, 0);
    result += mat4(0.19692351, 0.27922893, -0.053122103, -0.51934695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1, 1);
    result += mat4(0.355117, -0.090846136, 0.37365937, 0.11137923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0, -1);
    result += mat4(-0.72165877, -0.59019494, 0.8481885, 0.05167826, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0, 0);
    result += mat4(-0.48530313, -0.31214198, 0.15315624, -0.36387998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0, 1);
    result += mat4(0.57208353, 0.43942818, 0.10905489, 0.24084724, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1, -1);
    result += mat4(-0.64508355, -0.58178973, -0.051096864, -0.5557371, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1, 0);
    result += mat4(0.27913412, -0.05568814, 0.0049837218, 0.2867037, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1, 1);
    result += vec4(0.0022891357, 0.006680519, -0.0018321357, 0.024168976);
    return result;
}
//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-4x3x3x8
//!HOOK NATIVE
//!BIND conv2d_tf
//!SAVE conv2d_1_tf
//!WIDTH conv2d_tf.w
//!HEIGHT conv2d_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_tf_texOff(vec2(x_off, y_off))), 0))
#define go_1(x_off, y_off) (max(-(conv2d_tf_texOff(vec2(x_off, y_off))), 0))
vec4 hook() {
    vec4 result = mat4(0.120246045, -0.25353828, -0.008483144, 0.044902828, -0.034635838, -0.13876837, -0.0564579, -0.14356354, -0.06476451, -0.40522578, -0.16081795, -0.14218082, 0.0761317, -0.2909845, -0.19044621, -0.06853415) * go_0(-1, -1);
    result += mat4(-0.45282108, 0.44761544, -0.23318571, 0.1037926, 0.31716117, 0.24859436, -0.33692092, -0.32538056, -0.009581179, 0.11124058, -0.03061638, -0.3570318, -0.16368672, -0.39201367, -0.0961202, -0.19083214) * go_0(-1, 0);
    result += mat4(0.28125012, 0.18405882, 0.15648426, 0.09160491, 0.1007111, 0.038661584, -0.10065634, 0.025629511, 0.34510845, 0.4174794, -0.09917199, -0.050234247, 0.15372948, 0.058109928, 0.019246524, 0.03229593) * go_0(-1, 1);
    result += mat4(0.0024533141, 0.22063687, -0.053905517, -0.87459904, 0.10105915, -0.75460625, 0.29946774, 0.76801157, -0.06583864, 0.08759057, 0.21189982, 0.51707655, -0.38814548, 0.8500556, 0.13342623, 0.0347597) * go_0(0, -1);
    result += mat4(0.19859695, 0.018716134, -0.007822367, -0.98948723, -0.58018035, 0.08021126, 0.01933053, 0.15676953, 1.0046686, -0.11988689, 0.37417743, 0.1608409, 0.79577094, 0.4469124, 0.5367998, 0.35431108) * go_0(0, 0);
    result += mat4(0.3862468, -0.040454, 0.2102068, -0.19706263, -0.21383664, 0.17549376, 0.004354867, 0.19660933, -0.47262436, 0.18729177, 0.12469686, -0.07594849, -0.16879942, 0.034002934, -0.07891168, -0.054475818) * go_0(0, 1);
    result += mat4(0.115042865, 0.23291644, -0.09588174, -0.16150002, 0.009990335, -0.2003115, 0.19407223, 0.19254498, -0.17810617, -0.27847007, -0.2291428, 0.11939935, -0.039542776, 0.107534505, -0.16824618, -0.028939348) * go_0(1, -1);
    result += mat4(0.111194074, -0.22856294, 0.1634775, -0.037266847, -0.14792065, 0.30343652, -0.0903545, -0.065827586, -0.067062214, 0.264231, -0.80594176, -0.004526917, -0.14031398, 0.09462796, -0.52319664, -0.0879184) * go_0(1, 0);
    result += mat4(-0.085338555, 0.09508768, -0.18967478, -0.20616136, 0.22171834, -0.1122649, 0.21859398, -0.07463107, -0.43947566, -0.04658233, -0.31309763, -0.31373695, -0.01296717, -0.11316599, 0.060002066, 0.30045274) * go_0(1, 1);
    result += mat4(-0.29929537, 0.29934207, 0.04589155, -0.31126228, 0.3633354, -0.06805057, -0.22689408, 0.12601718, -0.2161203, 0.5058233, 0.20702487, 0.19256708, -0.16498506, 0.25489032, 0.22974853, 0.16654916) * go_1(-1, -1);
    result += mat4(0.5620887, -0.45316428, 0.416813, -0.3069286, -0.28059453, -0.07141292, 0.3526013, 0.5852414, 0.027956633, 0.08385418, 0.30464914, 0.2660139, 0.099035054, 0.43707302, 0.06464321, 0.21313953) * go_1(-1, 0);
    result += mat4(-0.12749544, -0.04792185, -0.11181775, -0.35267803, -0.35581318, -0.042046588, 0.011521119, 0.1436213, -0.31032056, -0.589649, 0.19048023, -0.22016796, -0.2368445, -0.16500308, -0.056804713, 0.06478294) * go_1(-1, 1);
    result += mat4(-0.0557634, 0.17845067, 0.3326485, 0.37136325, -0.37127915, 0.6830728, -0.39073142, -0.6361325, 0.17141333, 0.14321287, -0.025997372, -0.5822083, 0.272518, -0.79633987, -0.02072815, 0.058578975) * go_1(0, -1);
    result += mat4(0.045844503, -0.016484505, -0.0061356206, 0.62665355, 0.07542043, -0.30611044, -0.23096752, -0.16091357, -0.7990335, -0.040539805, -0.63497674, -0.26077038, -1.0020176, -0.033847157, -0.5064066, -0.33383542) * go_1(0, 0);
    result += mat4(-0.3629479, 0.0074331826, -0.17736267, 0.11674105, 0.081368044, -0.13662839, -0.15711904, -0.29278326, 0.36117476, 0.012970206, 0.119490795, 0.22605588, 0.14173496, -0.10449566, 0.09344112, 0.10064798) * go_1(0, 1);
    result += mat4(-0.072704256, -0.28558877, 0.01185428, 0.17996912, 0.108336374, 0.24757347, -0.22150481, -0.27480215, 0.25958627, 0.143048, 0.033931274, -0.13183618, 0.07990317, -0.085573465, 0.19328468, 0.21482603) * go_1(1, -1);
    result += mat4(-0.13383335, 0.18128417, -0.27479914, 0.028612139, 0.2353338, -0.26546377, 0.055647176, 0.01329833, -0.11688112, -0.14643711, 0.77054363, 0.088241465, 0.17342104, 0.14869496, 0.43756244, 0.055489503) * go_1(1, 0);
    result += mat4(0.22704609, -0.108087644, 0.239405, 0.01680071, -0.22981197, 0.21994804, -0.14199632, 0.17932184, 0.3999953, 0.044045992, -0.16400953, 0.064356275, 0.16594623, 0.16667248, 0.11147885, -0.10416401) * go_1(1, 1);
    result += vec4(-0.008246533, -0.0155717945, 0.018508673, 0.036317762);
    return result;
}
//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-4x3x3x8
//!HOOK NATIVE
//!BIND conv2d_1_tf
//!SAVE conv2d_2_tf
//!WIDTH conv2d_1_tf.w
//!HEIGHT conv2d_1_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_1_tf_texOff(vec2(x_off, y_off))), 0))
#define go_1(x_off, y_off) (max(-(conv2d_1_tf_texOff(vec2(x_off, y_off))), 0))
vec4 hook() {
    vec4 result = mat4(-0.14228773, -0.05568011, -0.28604564, 0.0692855, -0.29928935, 0.04936031, -0.10275336, 0.0507678, 0.33304757, -0.11891104, -0.23271708, -0.17254609, 0.098598674, 0.17586297, -0.06702627, 0.044717368) * go_0(-1, -1);
    result += mat4(-0.065420456, -0.24474545, 0.0058341813, 0.033852484, 0.07053477, -0.005546891, 0.09763071, -0.06316236, 0.6285486, 0.14792326, 0.06378541, 0.12502533, 0.043196052, -0.088076934, 0.04409347, 0.3464961) * go_0(-1, 0);
    result += mat4(0.13655396, -0.0057256212, -0.27873114, -0.15930223, -0.20210886, 0.23816396, 0.028765937, 0.0077880425, -0.025302507, 0.0057795374, -0.20171507, 0.1486441, -0.010655392, 0.09522306, -0.17620142, -0.21510497) * go_0(-1, 1);
    result += mat4(0.30185127, -0.081253104, 0.040863242, -0.39231506, -0.24306606, -0.106517136, 0.093525335, 0.0142454505, 0.28555018, 0.10913149, 0.10648559, 0.05883314, -0.022705961, 0.1346851, -0.43724024, -0.08737778) * go_0(0, -1);
    result += mat4(-0.56776285, -0.24228574, 0.17318335, -0.086373724, 0.016709035, -0.065060616, 0.43275502, 0.32893345, 0.6239558, -0.80867225, 0.27118737, 0.41649643, -0.021428747, -0.41328526, 0.3834752, -0.19380245) * go_0(0, 0);
    result += mat4(0.10901939, 0.14972338, -0.113506705, -0.20847203, 0.08943993, 0.20489438, -0.102841966, -0.16283628, -0.16618468, -0.11194578, 0.14919072, 0.021908801, -0.16308618, 0.091368645, 0.041092724, 0.21401644) * go_0(0, 1);
    result += mat4(-0.050562743, 0.053613614, 0.063051775, -0.034758687, 0.2977075, -0.012885461, -0.09823657, -0.00095222355, -0.09171528, -0.06808543, 0.1949944, 0.12233196, -0.018703338, 0.13654546, 0.3178133, -0.050238665) * go_0(1, -1);
    result += mat4(0.14363502, 0.24165472, -0.63475317, -0.11669119, 0.41330132, -0.29856327, 0.43997237, -0.015276553, -0.062390853, -0.14338706, -0.17313936, 0.015635246, 0.26260164, -0.018416358, 0.17292301, 0.3595362) * go_0(1, 0);
    result += mat4(0.09567567, 0.16271643, -0.16544034, -0.11610521, 0.20442581, 0.13267455, -0.32032704, -0.5531516, -0.016968483, -0.09631244, -0.18397026, -0.09509379, 0.06509173, 0.17809208, -0.17111729, -0.13280569) * go_0(1, 1);
    result += mat4(-0.58026034, -0.13305649, 0.29227597, 0.12403485, -0.42066872, -0.18279244, 0.20935725, -0.015602001, -0.0044811727, 0.18151452, 0.068702236, 0.0024144389, -0.62668854, -0.115279056, 0.15331383, 0.054738306) * go_1(-1, -1);
    result += mat4(-0.09207957, 0.112719655, -0.05632139, -0.20869423, -0.18433131, -0.011376126, 0.09015389, -0.115932405, -0.40383002, -0.2994877, 0.061519597, -0.057194903, 0.071793504, 0.24414942, -0.05178166, -0.2506641) * go_1(-1, 0);
    result += mat4(-0.07143187, -0.004574734, 0.03773425, 0.09914432, 0.024346843, -0.09510155, 0.07083783, 0.095276, 0.28666914, 0.10912378, 0.030481193, -0.33613577, -0.19597602, -0.0010103367, 0.06853106, 0.43965513) * go_1(-1, 1);
    result += mat4(-0.75355965, 0.08105801, 0.2575805, 0.1855558, -0.21126229, -0.22682515, 0.28475952, 0.11910795, -0.0038678453, -0.33745462, 0.0913251, 0.036781874, 0.096044764, 0.023855362, 0.63840985, -0.0011823437) * go_1(0, -1);
    result += mat4(0.3242983, 0.03790323, -0.29706755, -0.54178596, -0.006642778, -0.45760095, 0.085354425, 0.026962873, -0.22716765, 0.4290269, 0.14002348, -0.65367, -0.6280543, 0.4867579, -0.95422214, 0.49069193) * go_1(0, 0);
    result += mat4(-0.029097937, 0.054008633, 0.0031311738, -0.17200524, -0.070225105, 0.5197654, 0.0998417, -0.16697957, 0.28294855, -0.21427263, -0.23967932, -0.37792253, -0.13500658, 0.19577536, 0.5491258, 0.5189699) * go_1(0, 1);
    result += mat4(-0.30512694, -0.08018428, -0.2827837, 0.22270104, -0.41486284, -0.24427582, 0.32260728, 0.17826575, 0.2418024, 0.0030456767, -0.1248479, -0.1360096, -0.12765156, -0.38494956, 0.3574598, 0.012817438) * go_1(1, -1);
    result += mat4(-0.164501, -0.16414647, -0.29812577, -0.252649, -0.41829604, -0.6168994, -0.09820628, -0.12878606, 0.039604116, -0.074578114, 0.15250969, 0.02307242, -0.1859709, 0.09665458, -0.118457094, -0.21804371) * go_1(1, 0);
    result += mat4(0.026213242, -0.03884907, -0.12172462, -0.093781635, 0.03731606, -0.32370892, 0.3179014, 0.107671626, -0.009011399, -0.12383857, 0.05712106, 0.09909113, -0.20461522, 0.12461022, 0.24677515, 0.17799506) * go_1(1, 1);
    result += vec4(-0.026194833, 0.024928087, -0.14178553, -0.008513515);
    return result;
}
//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-4x3x3x8
//!HOOK NATIVE
//!BIND conv2d_2_tf
//!SAVE conv2d_3_tf
//!WIDTH conv2d_2_tf.w
//!HEIGHT conv2d_2_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_2_tf_texOff(vec2(x_off, y_off))), 0))
#define go_1(x_off, y_off) (max(-(conv2d_2_tf_texOff(vec2(x_off, y_off))), 0))
vec4 hook() {
    vec4 result = mat4(0.44222924, -0.20567045, -0.33046108, -0.15788712, 0.17785256, -0.08542495, -0.2554936, -0.26120716, -0.23147899, -0.14247993, -0.08897313, -0.20601724, -0.050403774, 0.0068340874, -0.14638618, -0.19267792) * go_0(-1, -1);
    result += mat4(0.41229016, 0.2976874, -0.2524051, 0.015477893, 0.14597115, 0.016927741, -0.37216052, 0.14880686, 0.042500544, 0.5147034, -0.20466702, -0.23923855, -0.058313254, -0.15096113, -0.2273123, -0.12348507) * go_0(-1, 0);
    result += mat4(0.21645498, 0.22256537, -0.2516077, -0.07870266, -0.08621209, 0.09726381, 0.1967628, -0.3911211, -0.22991666, 0.206689, 0.3754391, -0.4701994, 0.28906122, 0.48903742, -0.42768562, 0.12668724) * go_0(-1, 1);
    result += mat4(0.6225862, -0.54533136, -0.49756703, 0.4608409, 0.3247196, -0.79549116, -0.3363705, -0.35526428, -0.12645157, -0.010724855, -0.051642157, -0.11370338, 0.22120635, 0.056249492, -0.1689742, 0.114750594) * go_0(0, -1);
    result += mat4(0.4876132, 0.67052966, -0.33969453, -0.024284853, -0.76720643, 0.32237822, -0.23795614, -0.30442873, -0.17915753, -0.3824449, -0.5784291, 0.10515489, -0.00922456, -0.36423442, 0.56202793, -0.5974335) * go_0(0, 0);
    result += mat4(-0.0052383384, 0.17032535, 0.019978594, -0.17939186, -0.08977485, 0.1445922, 0.060338553, 0.1632421, -0.4430374, -0.3095605, -0.019900933, -0.35811394, 0.13157792, 0.1097987, 0.23986988, 0.050041698) * go_0(0, 1);
    result += mat4(-0.11527369, -0.059822153, -0.28622663, 0.33182254, 0.39705658, -0.063013025, -0.3140378, 0.120759726, 0.0035893368, 0.03346655, -0.071935624, -0.0650168, -0.07284939, -0.16986927, 0.11351052, 0.12671682) * go_0(1, -1);
    result += mat4(-0.57296044, 0.06755365, 0.2655602, -0.077967234, 0.05039912, -0.2337925, -0.0724354, -0.3378681, -0.5507442, 0.30624872, 0.28286147, -0.39029458, 0.01138771, 0.57545096, 0.49588615, -0.34115717) * go_0(1, 0);
    result += mat4(-0.11806662, 0.16533169, 0.20323633, 0.38054636, -0.032277305, -0.07993452, 0.015543453, -0.4178468, 0.053857878, 0.22493629, 0.09286872, -0.29692668, 0.120100334, 0.21749139, 0.017794177, 0.02478345) * go_0(1, 1);
    result += mat4(-0.11816117, -0.10108157, 0.028023139, 0.15271313, -0.09313028, -0.061563242, 0.074002095, 0.24098666, -0.13215114, 0.15904418, 0.22900139, 0.199312, 0.11682093, 0.08578615, 0.11834666, -0.09660822) * go_1(-1, -1);
    result += mat4(0.14948857, -0.22163622, -0.03816656, 0.043060437, 0.17137505, 0.32979384, 0.32472295, 0.39477265, -0.49607447, -0.22403178, 0.46961772, 0.07810704, 0.34225503, 0.16128562, -0.031660657, -0.08157027) * go_1(-1, 0);
    result += mat4(-0.09185847, -0.1019516, 0.06775408, -0.28294474, -0.056110516, -0.08183694, 0.07529613, 0.11782862, -0.038788468, -0.14188017, -0.16517855, 0.4723193, -0.05269544, -0.16444696, 0.1692989, -0.173332) * go_1(-1, 1);
    result += mat4(0.0010905995, 0.052502926, 0.08545965, -0.0590647, -0.19647662, 0.026870903, 0.070864156, 0.33584818, -0.48288915, 0.23009643, 0.3080521, 0.11176734, 0.3955865, -0.22153209, 0.057071332, 0.6561838) * go_1(0, -1);
    result += mat4(0.003911309, 0.044658884, 0.30826715, -0.21620342, -0.12449993, -0.30831468, 0.5242059, -0.64524925, -0.05835086, 0.30469298, 0.7405873, 0.008611181, 0.29850152, -0.2356114, -0.5640807, 0.28436723) * go_1(0, 0);
    result += mat4(0.032566577, 0.805437, 0.34414083, 0.35702032, 0.033585, 0.33480248, -0.035534803, 0.402878, 0.39642414, -0.4522896, -0.17976756, 0.070002995, -0.18250887, 0.26332957, 0.1826293, -0.4009609) * go_1(0, 1);
    result += mat4(0.17087783, -0.21703565, -0.0741254, -0.14819352, -0.04353288, -0.2549195, 0.018133886, 0.032123297, -0.07559239, 0.028765375, 0.22175226, -0.06600925, -0.41598725, 0.107947595, 0.13969894, -0.2237941) * go_1(1, -1);
    result += mat4(0.5108303, -0.075255774, -0.35449007, 0.26940575, 0.29391584, -0.22537649, -0.26524827, 0.15974446, -0.20688486, -0.14978574, 0.035696905, 0.10029132, 0.28970048, -0.03311566, -0.08653985, 0.014710257) * go_1(1, 0);
    result += mat4(-0.14669253, -0.13714626, -0.30282694, 0.015046697, -0.21838178, -0.18170798, 0.046043683, -0.0077859433, 0.061056115, 0.19947378, 0.17124066, -0.21425259, -0.05963772, 0.10178601, -0.046067704, 0.11996576) * go_1(1, 1);
    result += vec4(0.09955334, -0.00017742465, -0.25487348, -0.013588552);
    return result;
}
//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-4x3x3x8
//!HOOK NATIVE
//!BIND conv2d_3_tf
//!SAVE conv2d_4_tf
//!WIDTH conv2d_3_tf.w
//!HEIGHT conv2d_3_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_3_tf_texOff(vec2(x_off, y_off))), 0))
#define go_1(x_off, y_off) (max(-(conv2d_3_tf_texOff(vec2(x_off, y_off))), 0))
vec4 hook() {
    vec4 result = mat4(-0.18400274, -0.052449927, 0.035932228, -0.10700425, 0.23204242, -0.15588471, 0.0074020987, -0.099339336, 0.16824502, -0.50202084, -0.11331619, -0.10067818, 0.28121322, -0.1946072, -0.055276066, 0.04946878) * go_0(-1, -1);
    result += mat4(-0.027286196, -0.18088813, 0.06160129, -0.10082991, -0.19125172, -0.0676812, -0.0573419, -0.24894811, 0.39726025, -0.4326311, -0.33458892, 0.21933173, 0.52163416, -0.06417785, 0.123047166, 0.13229012) * go_0(-1, 0);
    result += mat4(0.29269677, -0.1303856, -0.06259962, 0.3763337, -0.21608809, 0.17271993, 0.08225522, -0.23083791, 0.031015594, -0.14177205, 0.0901927, -0.14980385, 0.022301903, 0.15406118, 0.15134995, -0.13880007) * go_0(-1, 1);
    result += mat4(-0.098608, 0.21008842, 0.19967844, 0.029875828, -0.006239435, -0.32972297, -0.18810818, -0.065228716, 0.021986345, 0.4332397, -0.29741696, -0.032957386, -0.15603954, -0.008548586, -0.03722694, 0.0014814965) * go_0(0, -1);
    result += mat4(-0.3788877, 0.3716827, 0.036192384, 0.07517171, -0.4443881, -0.4314338, -0.033268854, -0.6550591, 0.26697174, 0.07964821, -0.49928066, 0.7382862, -0.4318063, -0.35719305, -0.24859285, 0.30141342) * go_0(0, 0);
    result += mat4(-0.09545888, -0.1870711, 0.092456385, 0.39342266, 0.08727876, -0.122371264, -0.033263855, 0.16319723, -0.026483417, -0.15225303, -0.27141076, 0.015007477, -0.17755058, 0.22480914, -0.12867172, -0.33737892) * go_0(0, 1);
    result += mat4(0.11636307, -0.030419126, 0.19336541, -0.07747184, 0.14729372, -0.01953313, -0.08054906, -0.21382187, 0.06544604, -0.2357975, -0.08135107, 0.22526638, -0.25277156, 0.024584265, 0.10033413, 0.24384668) * go_0(1, -1);
    result += mat4(0.30430293, 0.23309821, 0.11252591, 0.07896148, 0.0038531914, -0.4368844, -0.07505762, -0.18756075, 0.31882232, 0.40232384, -0.34014484, 0.14620861, -0.3344482, 0.008054752, -0.15526776, -0.10934299) * go_0(1, 0);
    result += mat4(0.21063808, 0.012809806, -0.017152654, 0.022226151, 0.08303113, -0.25658995, -0.1445917, 0.3349834, 0.2324676, -0.53219074, -0.33402997, -0.23049444, 0.08128475, -0.1807687, -0.18822098, -0.106513664) * go_0(1, 1);
    result += mat4(0.44162488, -0.085040756, 0.2830031, -0.39963537, 0.14924183, -0.21482648, -0.07974778, -0.46270838, 0.03301471, 0.17836772, -0.075404465, 0.2245368, -0.11170137, 0.32487026, 0.08701236, -0.10078573) * go_1(-1, -1);
    result += mat4(0.46938285, -0.17071244, 0.12076917, -0.6552318, 0.6493962, -0.46528274, -0.017317647, -0.034160152, -0.5102193, 0.47464257, 0.17412706, 0.019565342, -0.24264671, 0.27020925, 0.047177672, -0.42606503) * go_1(-1, 0);
    result += mat4(0.052076958, -0.101318456, 0.009411107, -0.95060515, 0.39399293, -0.16729546, -0.017000573, 0.074465916, -0.0928645, 0.14872141, -0.12682387, 0.17986335, 0.028641982, 0.008414377, 0.083590336, -0.24318227) * go_1(-1, 1);
    result += mat4(0.5098501, -0.15018643, 0.094427064, -0.65684944, 0.28861144, 0.12065829, 0.0008518829, -0.21826997, 0.09592536, -0.63525665, -0.20940216, 0.14306149, 0.04307013, 0.18112777, 0.14549379, 0.010673611) * go_1(0, -1);
    result += mat4(0.2077315, -0.22932069, 0.28555182, -0.08698525, 0.6248194, -0.10855944, -0.18675956, 0.25279534, -0.17808619, -0.011339784, 0.019783061, -0.63724786, 0.61569226, 0.09902952, 0.23824617, -0.5289973) * go_1(0, 0);
    result += mat4(0.3093714, 0.18877034, -0.059449483, -0.5408342, 0.34468332, -0.32801077, -0.2970488, -0.20724146, 0.1420505, 0.54901487, 0.11516092, -0.23538086, 0.343258, -0.34193957, 0.027069068, -0.02512585) * go_1(0, 1);
    result += mat4(0.27229798, 0.26615578, 0.22542869, -0.08924347, 0.5587202, -0.14841029, 0.080337256, -0.08529828, -0.18964142, 0.1777141, -0.27541327, -0.2119683, 0.030844163, 0.13232501, -0.07757602, -0.2628364) * go_1(1, -1);
    result += mat4(-0.13516346, -0.0350648, 0.18829866, -0.074184254, 0.3780983, -0.08449683, -0.04196095, -0.35261062, -0.17414024, -0.40722865, -0.45523182, -0.056793902, 0.7972378, -0.15490225, 0.24444209, -0.07335079) * go_1(1, 0);
    result += mat4(0.09124601, 0.22666673, 0.25453654, 0.011525251, 0.38520703, -0.43912116, -0.1978061, -0.4995556, -0.09703416, 0.5365894, 0.033034127, 0.10956916, 0.14855027, 0.041871756, 0.19635478, -0.15912913) * go_1(1, 1);
    result += vec4(0.09952117, -0.0029445954, -0.016311748, -0.0051748934);
    return result;
}
//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-4x3x3x8
//!HOOK NATIVE
//!BIND conv2d_4_tf
//!SAVE conv2d_5_tf
//!WIDTH conv2d_4_tf.w
//!HEIGHT conv2d_4_tf.h
//!COMPONENTS 4
#define go_0(x_off, y_off) (max((conv2d_4_tf_texOff(vec2(x_off, y_off))), 0))
#define go_1(x_off, y_off) (max(-(conv2d_4_tf_texOff(vec2(x_off, y_off))), 0))
vec4 hook() {
    vec4 result = mat4(0.22375183, 0.15642066, 0.0027493888, -0.034654915, -0.11975634, -0.14011851, -0.028796474, 0.39664328, -0.2729618, -0.25472766, 0.1739754, -0.33687112, 0.1584895, -0.08984135, 0.4986491, 0.26216802) * go_0(-1, -1);
    result += mat4(-0.08692971, -0.244401, 0.059491448, -0.06617699, -0.46326727, -0.3332257, -0.056606203, 0.040503666, -0.0579385, 0.7806782, 0.2770394, 0.051955234, 0.017592484, -0.13681106, -0.0015415741, 0.15781628) * go_0(-1, 0);
    result += mat4(0.19951883, 0.09409681, -0.10234569, -0.06253375, -0.011282426, -0.29609013, -0.43782178, 0.24918082, 0.11903775, 0.12842655, 0.22519489, 0.05326746, 0.26088977, -0.42349616, -0.12146488, 0.24056055) * go_0(-1, 1);
    result += mat4(0.016060859, 0.06922653, 0.05804089, -0.038792886, -0.026809502, 0.051724408, -0.43061247, 0.36674827, 0.029192261, -0.04146412, 0.06302812, 0.33902913, -0.046297602, 0.014793382, 0.8815463, 0.09301009) * go_0(0, -1);
    result += mat4(-0.28944647, -0.24126476, 0.35634434, -0.35750812, -0.28838268, -0.9061748, 0.1640685, -0.47413218, 0.18709733, -0.1069547, 0.88611734, -0.36441585, -0.5800216, -0.59221965, 0.13345434, -1.0079494) * go_0(0, 0);
    result += mat4(0.077720806, -0.24100173, 0.016227145, -0.11563837, -0.44215763, -0.14547442, -0.4548616, -0.013875177, 0.34540626, 0.10772655, -0.25945014, 0.24837255, 0.10584004, -0.18672553, -0.3887678, 0.65099657) * go_0(0, 1);
    result += mat4(0.18188255, 0.11511272, 0.037408095, -0.08565682, 0.26924613, -0.48182252, 0.021480748, 0.40977505, -0.04205674, -0.4544048, -0.33570796, 0.28787524, 0.030705005, -0.32668447, -0.05613743, 0.37471768) * go_0(1, -1);
    result += mat4(0.28082007, 0.14139059, -0.15936728, 0.113764375, 0.009795267, -0.14990161, -0.26429772, 0.45548558, -0.28499687, -0.011904833, -0.41982037, 0.41319644, -0.119887285, 0.05093343, -0.12932482, 0.42854932) * go_0(1, 0);
    result += mat4(0.08813202, 0.29741588, 0.44023064, 0.006636608, -0.4456925, -0.2348247, -0.52438784, 0.2585316, 0.2412306, -0.080477946, -0.40862432, 0.2911882, -0.6261538, 0.21490446, -0.40845248, 0.84342647) * go_0(1, 1);
    result += mat4(-0.16903545, -0.30187723, 0.13144577, 0.120673455, -0.22500677, -0.08073623, -0.19976494, -0.09743695, -0.029295057, -0.1544929, 0.13514785, 0.13641793, 0.16240741, 0.47383696, 0.13342428, -0.070887774) * go_1(-1, -1);
    result += mat4(0.33370623, 0.23074377, -0.08786303, -0.010002896, 0.03251607, 0.26727784, -0.0814764, 0.17879444, 0.29950398, 0.08984566, -0.12864575, 0.03042438, 0.023396945, 0.061183084, 0.5186999, -0.15316096) * go_1(-1, 0);
    result += mat4(-0.12158245, -0.08235352, 0.14695986, 0.1938321, -0.14338279, 0.4016386, -0.08504818, -0.035008144, -0.05516174, -0.25816798, 0.39428246, 0.11149875, 0.038196295, 0.1297396, 0.18684737, -0.16436681) * go_1(-1, 1);
    result += mat4(0.20318216, -0.09607132, 0.120034166, 0.012529418, 0.13008751, -0.007090291, -0.14300744, 0.07949231, -0.3729823, -0.42881492, 0.37269312, -0.09243256, -0.053021587, 0.19456874, -0.049720023, -0.043641627) * go_1(0, -1);
    result += mat4(0.8013266, 0.45428252, -0.8008251, 0.2533803, 0.31479985, -0.04182577, -0.33689624, 0.23748939, 0.19883296, 0.25437105, -0.035779912, 0.07402009, -0.07005027, 0.53556275, 0.20448484, 0.31603765) * go_1(0, 0);
    result += mat4(-0.7044255, -0.30568084, -0.3600641, 0.28011224, -0.009158929, 0.1246835, -0.17913434, 0.13562731, -0.35610622, 0.04667497, 0.11898062, 0.003059154, -0.0072753844, 0.07187719, 0.069682546, -0.11383744) * go_1(0, 1);
    result += mat4(0.19547552, -0.2145317, 0.42775017, 0.26939857, -0.016396707, 0.0927441, 0.066456094, -0.097182825, 0.052841246, -0.092978135, -0.12712398, 0.25821054, -0.03924832, -0.016233718, 0.0962333, -0.15938285) * go_1(1, -1);
    result += mat4(-0.50539756, -0.6539047, 0.23448852, 0.0111731365, -0.2253925, 0.10402402, -0.19680314, -0.0958512, -0.18554905, -0.41457322, 0.06738916, 0.07293579, -0.1098502, 0.019997254, -0.11903089, 0.087941356) * go_1(1, 0);
    result += mat4(-0.8971003, -0.3772124, -0.88062686, -0.49949008, -0.07522525, -0.02995562, -0.23851943, -0.07368703, -0.14994396, -0.17531817, -0.040804736, 0.053157937, -0.02958709, 0.03047698, -0.07454886, -0.188212) * go_1(1, 1);
    result += vec4(-0.040177453, -0.104899175, -0.076162554, 0.09617415);
    return result;
}
//!DESC Anime4K-v4.0-Line-Reconstruction-Light-(L)-Conv-Reduce
//!HOOK NATIVE
//!BIND HOOKED
//!BIND conv2d_tf
//!BIND conv2d_1_tf
//!BIND conv2d_2_tf
//!BIND conv2d_3_tf
//!BIND conv2d_4_tf
//!BIND conv2d_5_tf
//!WIDTH conv2d_tf.w
//!HEIGHT conv2d_tf.h
#define g_0 (max((conv2d_tf_tex(conv2d_tf_pos)), 0))
#define g_1 (max(-(conv2d_tf_tex(conv2d_tf_pos)), 0))
#define g_2 (max((conv2d_1_tf_tex(conv2d_1_tf_pos)), 0))
#define g_3 (max(-(conv2d_1_tf_tex(conv2d_1_tf_pos)), 0))
#define g_4 (max((conv2d_2_tf_tex(conv2d_2_tf_pos)), 0))
#define g_5 (max(-(conv2d_2_tf_tex(conv2d_2_tf_pos)), 0))
#define g_6 (max((conv2d_3_tf_tex(conv2d_3_tf_pos)), 0))
#define g_7 (max(-(conv2d_3_tf_tex(conv2d_3_tf_pos)), 0))
#define g_8 (max((conv2d_4_tf_tex(conv2d_4_tf_pos)), 0))
#define g_9 (max(-(conv2d_4_tf_tex(conv2d_4_tf_pos)), 0))
#define g_10 (max((conv2d_5_tf_tex(conv2d_5_tf_pos)), 0))
#define g_11 (max(-(conv2d_5_tf_tex(conv2d_5_tf_pos)), 0))
vec4 hook() {
    vec4 result = mat4(0.03913277, 0.0, 0.0, 0.0, -0.020963494, 0.0, 0.0, 0.0, 0.0071913856, 0.0, 0.0, 0.0, -0.0024315512, 0.0, 0.0, 0.0) * g_0;
    result += mat4(-0.010562011, 0.0, 0.0, 0.0, -0.01260763, 0.0, 0.0, 0.0, -0.02006432, 0.0, 0.0, 0.0, -0.012064959, 0.0, 0.0, 0.0) * g_1;
    result += mat4(-0.0587232, 0.0, 0.0, 0.0, 0.030503575, 0.0, 0.0, 0.0, -0.11593969, 0.0, 0.0, 0.0, -0.023084562, 0.0, 0.0, 0.0) * g_2;
    result += mat4(0.10647397, 0.0, 0.0, 0.0, -0.045630217, 0.0, 0.0, 0.0, 0.050366804, 0.0, 0.0, 0.0, 0.10280189, 0.0, 0.0, 0.0) * g_3;
    result += mat4(0.046530925, 0.0, 0.0, 0.0, -0.02335736, 0.0, 0.0, 0.0, -0.015457089, 0.0, 0.0, 0.0, 0.06943579, 0.0, 0.0, 0.0) * g_4;
    result += mat4(-0.011611921, 0.0, 0.0, 0.0, 0.07702742, 0.0, 0.0, 0.0, 0.008843999, 0.0, 0.0, 0.0, -0.04983919, 0.0, 0.0, 0.0) * g_5;
    result += mat4(-0.006747618, 0.0, 0.0, 0.0, 0.0036872134, 0.0, 0.0, 0.0, -0.037399407, 0.0, 0.0, 0.0, -0.011760619, 0.0, 0.0, 0.0) * g_6;
    result += mat4(0.009772739, 0.0, 0.0, 0.0, -0.010146913, 0.0, 0.0, 0.0, 0.025251444, 0.0, 0.0, 0.0, -0.0009550131, 0.0, 0.0, 0.0) * g_7;
    result += mat4(-0.007899725, 0.0, 0.0, 0.0, -0.014007076, 0.0, 0.0, 0.0, 0.068403885, 0.0, 0.0, 0.0, 0.039901007, 0.0, 0.0, 0.0) * g_8;
    result += mat4(-0.020855239, 0.0, 0.0, 0.0, 0.03268605, 0.0, 0.0, 0.0, -0.016800364, 0.0, 0.0, 0.0, -0.016431145, 0.0, 0.0, 0.0) * g_9;
    result += mat4(-0.010649444, 0.0, 0.0, 0.0, 0.014685043, 0.0, 0.0, 0.0, 0.00040937608, 0.0, 0.0, 0.0, -0.04686005, 0.0, 0.0, 0.0) * g_10;
    result += mat4(0.036115736, 0.0, 0.0, 0.0, 0.0236685, 0.0, 0.0, 0.0, -0.030542037, 0.0, 0.0, 0.0, -0.014002663, 0.0, 0.0, 0.0) * g_11;
    result += vec4(0.007131963, 0.0, 0.0, 0.0);
    return result + HOOKED_tex(HOOKED_pos);
}